public static int[] 
longestIncreasingSubsequence(int[] nums) {
    int n = nums.length;
    int[] dp = new int[n];
    Arrays.fill(dp, 1);
    int maxLen = 1;
    int maxIndex = 0;
    for (int i = 1; i < n; i++) {
        for (int j = 0; j < i; j++) {
            if (nums[i] > nums[j]) {
                dp[i] = Math.max(dp[i], dp[j] + 1);
            }
        }
        if (dp[i] > maxLen) {
            maxLen = dp[i];
            maxIndex = i;
        }
    }
    int[] res = new int[maxLen];
    res[--maxLen] = nums[maxIndex];
    for (int i = maxIndex - 1; i >= 0; i--) {
        if (nums[i] < nums[maxIndex] && dp[i] == dp[maxIndex] - 1) {
            res[--maxLen] = nums[i];
            maxIndex = i;
        }
    }
    return res;
}
